# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: tmwalo <marvin@42.fr>                      +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2017/05/31 12:12:03 by tmwalo            #+#    #+#              #
#    Updated: 2018/01/08 17:12:17 by tmwalo           ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

FLAGS = -Wall -Wextra -Werror

EXES = 	count_vertices \
	find_prev_cmd_target \
	free_splitstr \
	ft_atoi \
	ft_bzero \
	ft_isascii \
	ft_iscommand \
	ft_iscomment \
	ft_isedge \
	ft_isnum \
	ft_isprint \
	ft_isvertex \
	ft_itoa \
	ft_memalloc \
	ft_memccpy \
	ft_memchr \
	ft_memcmp \
	ft_memcpy \
	ft_memdel \
	ft_memmove \
	ft_memset \
	ft_not_empty \
	ft_putchar_fd \
	ft_putchar \
	ft_putendl_fd \
	ft_putendl \
	ft_putnbr_fd \
	ft_putnbr \
	ft_putstr_fd \
	ft_putstr \
	ft_stack_ll \
	ft_strcat \
	ft_strchr \
	ft_strclr \
	ft_strcmp \
	ft_strcpy \
	ft_strdel \
	ft_strdup \
	ft_striteri \
	ft_striter \
	ft_strlcat \
	ft_strlen \
	ft_strncat \
	ft_strncmp \
	ft_strncpy \
	ft_strnew \
	ft_strnstr \
	ft_strrchr \
	ft_strsplit \
	ft_strstr \
	ft_strtok \
	ft_strtrim \
	gnl \
	graph_add_edge \
	graph_src_size \
	init_graph \
	init_sgraph \
	llst_add \
	llst_delone \
	llst_del \
	llst_new \
	read_file \
	sgraph_add_vertex \
	st_contains \
	st_get \
	st_node_delone \
	st_node_new \
	st_put \
	st_size \
	validate_graph_file \
	validate_graph_input \
	sgraph_add_vertex \
	sgraph_add_vertices \
	sgraph_add_edge \
	graph_print \
	sgraph_add_all_edges \
	print_edges \
	adj_lsts_destroy \
	graph_destroy \
	print_skeys \
	print_st \
	sgraph_print \
	st_destroy \
	skeys_destroy \
	sgraph_destroy \
	sgraph_build \
	first_token \
	init_pathfinder \
	path_to \
	all_paths \
	pathfinder_destroy \
	llst_len \
	paths_cross \
	unviable_path \
	unviable_paths \
	path_search \
	viable_paths \
	paths_destroy \
	store_path \
	is_viable \
	init_occupied \
	init_ants \
	move_ants \
	llst_rev \
	cmd_start_or_end \
	validate_ants \
	validate_rooms \
	validate_edges \
	prepare_sgraph \

rmexes:
	/bin/rm $(EXES)

ft_putchar: ft_putchar_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_putchar_fd: ft_putchar_fd_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_putstr: ft_putstr_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_putstr_fd: ft_putstr_fd_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_putendl: ft_putendl_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_putendl_fd: ft_putendl_fd_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_striter: ft_striter_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_striteri: ft_striteri_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_memset: ft_memset_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_bzero: ft_bzero_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_memcpy: ft_memcpy_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_memccpy: ft_memccpy_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_memmove: ft_memmove_test.c
	gcc -o $@ $@_test.c -L. -lft

ft_memchr: ft_memchr_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_memcmp: ft_memcmp_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_memalloc: ft_memalloc_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_memdel: ft_memdel_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strnew: ft_strnew_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strdel: ft_strdel_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strclr: ft_strclr_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strcpy: ft_strcpy_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strncpy: ft_strncpy_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strdup: ft_strdup_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strcat: ft_strcat_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strncat: ft_strncat_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strlcat: ft_strlcat_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strchr: ft_strchr_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strrchr: ft_strrchr_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_atoi: ft_atoi_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strstr: ft_strstr_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_isascii: ft_isascii_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_isprint: ft_isprint_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strnstr: ft_strnstr_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strcmp: ft_strcmp_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strncmp: ft_strncmp_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_itoa: ft_itoa_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_putnbr_fd: ft_putnbr_fd_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_putnbr: ft_putnbr_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strtrim: ft_strtrim_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strsplit: ft_strsplit_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strtok: ft_strtok_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

free_splitstr: free_splitstr_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_strlen: ft_strlen_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_realloc: ft_realloc_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

ft_stack_ll: ft_stack_ll_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

gnl: gnl_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

llst_new: llst_new_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

llst_add: llst_add_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

llst_delone: llst_delone_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

llst_del: llst_del_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

init_graph: init_graph_test.c
	gcc -o $@ $@_test.c -L. -lft $(FLAGS)

graph_add_edge: graph_add_edge_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

st_node_new: st_node_new_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

st_node_delone: st_node_delone_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

st_put: st_put_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

st_get: st_get_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

st_contains: st_contains_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

st_size: st_size_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

ft_isnum: ft_isnum_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

ft_iscommand: ft_iscommand_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

ft_iscomment: ft_iscomment_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

ft_isvertex: ft_isvertex_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

ft_isedge: ft_isedge_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

ft_not_empty: ft_not_empty_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

init_sgraph: init_sgraph_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

read_file: read_file_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

validate_graph_input: validate_graph_input_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

validate_graph_file: validate_graph_file_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

count_vertices: count_vertices_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

find_prev_cmd_target: find_prev_cmd_target_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

graph_src_size: graph_src_size_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

sgraph_add_vertex: sgraph_add_vertex_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

sgraph_add_vertices: sgraph_add_vertices_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

sgraph_add_edge: sgraph_add_edge_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

graph_print: graph_print_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

sgraph_add_all_edges: sgraph_add_all_edges_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

print_edges: print_edges_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

adj_lsts_destroy: adj_lsts_destroy_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

graph_destroy: graph_destroy_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

print_skeys: print_skeys_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

print_st: print_st_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

sgraph_print: sgraph_print_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

st_destroy: st_destroy_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

skeys_destroy: skeys_destroy_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

sgraph_destroy: sgraph_destroy_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

sgraph_build: sgraph_build_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

first_token: first_token_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

init_pathfinder: init_pathfinder_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

path_to: path_to_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

all_paths: all_paths_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

pathfinder_destroy: pathfinder_destroy_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

llst_len: llst_len_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

paths_cross: paths_cross_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

unviable_path: unviable_path_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

unviable_paths: unviable_paths_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

path_search: path_search_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

viable_paths: viable_paths_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

paths_destroy: paths_destroy_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

store_path: store_path_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

is_viable: is_viable_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

init_occupied: init_occupied_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

init_ants: init_ants_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

move_ants: move_ants_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

llst_rev: llst_rev_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

cmd_start_or_end: cmd_start_or_end_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

validate_ants: validate_ants_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

validate_rooms: validate_rooms_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

validate_edges: validate_edges_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)

prepare_sgraph: prepare_sgraph_test.c
	gcc -o $@ $@_test.c -g -L. -lft $(FLAGS)
